[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(/Users/Mateusz/Programming/Eclipse/EPANNs/mastersAlgorithm/src/main/scala/theatre/CPPN.scala, /Users/Mateusz/Programming/Eclipse/EPANNs/mastersAlgorithm/src/main/scala/theatre/CPPNNodes.scala, /Users/Mateusz/Programming/Eclipse/EPANNs/mastersAlgorithm/src/main/scala/theatre/CPPNQuery.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set(/Users/Mateusz/Programming/Eclipse/EPANNs/mastersAlgorithm/target/scala-2.12/classes/theatre/CPPN$StemCellReadyToUse$.class, /Users/Mateusz/Programming/Eclipse/EPANNs/mastersAlgorithm/target/scala-2.12/classes/theatre/CPPNQuery$Result$.class, /Users/Mateusz/Programming/Eclipse/EPANNs/mastersAlgorithm/target/scala-2.12/classes/theatre/SensorNode$$anonfun$receive$1.class, /Users/Mateusz/Programming/Eclipse/EPANNs/mastersAlgorithm/target/scala-2.12/classes/theatre/CPPN$StemCellReadyToUse.class, /Users/Mateusz/Programming/Eclipse/EPANNs/mastersAlgorithm/target/scala-2.12/classes/theatre/ParameterNode$Parameter$.class, /Users/Mateusz/Programming/Eclipse/EPANNs/mastersAlgorithm/target/scala-2.12/classes/theatre/CPPN$.class, /Users/Mateusz/Programming/Eclipse/EPANNs/mastersAlgorithm/target/scala-2.12/classes/theatre/CPPNQuery$$anonfun$receive$1.class, /Users/Mateusz/Programming/Eclipse/EPANNs/mastersAlgorithm/target/scala-2.12/classes/theatre/ParameterNode$$anonfun$receive$3.class, /Users/Mateusz/Programming/Eclipse/EPANNs/mastersAlgorithm/target/scala-2.12/classes/theatre/OutputNode$$anonfun$receive$4.class, /Users/Mateusz/Programming/Eclipse/EPANNs/mastersAlgorithm/target/scala-2.12/classes/theatre/SensorNode$Input.class, /Users/Mateusz/Programming/Eclipse/EPANNs/mastersAlgorithm/target/scala-2.12/classes/theatre/OutputNode.class, /Users/Mateusz/Programming/Eclipse/EPANNs/mastersAlgorithm/target/scala-2.12/classes/theatre/HiddenNode$$anonfun$receive$2.class, /Users/Mateusz/Programming/Eclipse/EPANNs/mastersAlgorithm/target/scala-2.12/classes/theatre/ParameterNode.class, /Users/Mateusz/Programming/Eclipse/EPANNs/mastersAlgorithm/target/scala-2.12/classes/theatre/CPPNQuery$.class, /Users/Mateusz/Programming/Eclipse/EPANNs/mastersAlgorithm/target/scala-2.12/classes/theatre/CPPN$$anonfun$receive$1.class, /Users/Mateusz/Programming/Eclipse/EPANNs/mastersAlgorithm/target/scala-2.12/classes/theatre/SensorNode.class, /Users/Mateusz/Programming/Eclipse/EPANNs/mastersAlgorithm/target/scala-2.12/classes/theatre/SensorNode$.class, /Users/Mateusz/Programming/Eclipse/EPANNs/mastersAlgorithm/target/scala-2.12/classes/theatre/CPPNQuery$StemCellReadyToUse$.class, /Users/Mateusz/Programming/Eclipse/EPANNs/mastersAlgorithm/target/scala-2.12/classes/theatre/SensorNode$addOutputNode.class, /Users/Mateusz/Programming/Eclipse/EPANNs/mastersAlgorithm/target/scala-2.12/classes/theatre/SensorNode$Input$.class, /Users/Mateusz/Programming/Eclipse/EPANNs/mastersAlgorithm/target/scala-2.12/classes/theatre/CPPN.class, /Users/Mateusz/Programming/Eclipse/EPANNs/mastersAlgorithm/target/scala-2.12/classes/theatre/SensorNode$addOutputNode$.class, /Users/Mateusz/Programming/Eclipse/EPANNs/mastersAlgorithm/target/scala-2.12/classes/theatre/HiddenNode$.class, /Users/Mateusz/Programming/Eclipse/EPANNs/mastersAlgorithm/target/scala-2.12/classes/theatre/OutputNode$.class, /Users/Mateusz/Programming/Eclipse/EPANNs/mastersAlgorithm/target/scala-2.12/classes/theatre/HiddenNode.class, /Users/Mateusz/Programming/Eclipse/EPANNs/mastersAlgorithm/target/scala-2.12/classes/theatre/VectorTools.class, /Users/Mateusz/Programming/Eclipse/EPANNs/mastersAlgorithm/target/scala-2.12/classes/theatre/ParameterNode$.class, /Users/Mateusz/Programming/Eclipse/EPANNs/mastersAlgorithm/target/scala-2.12/classes/theatre/CPPNQuery.class, /Users/Mateusz/Programming/Eclipse/EPANNs/mastersAlgorithm/target/scala-2.12/classes/theatre/CPPNQuery$Result.class, /Users/Mateusz/Programming/Eclipse/EPANNs/mastersAlgorithm/target/scala-2.12/classes/theatre/CPPNQuery$StemCellReadyToUse.class, /Users/Mateusz/Programming/Eclipse/EPANNs/mastersAlgorithm/target/scala-2.12/classes/theatre/ParameterNode$Parameter.class, /Users/Mateusz/Programming/Eclipse/EPANNs/mastersAlgorithm/target/scala-2.12/classes/theatre/VectorTools$.class)[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(theatre.CPPNQuery, theatre.CPPN, theatre.CPPNQuery.Result, theatre.HiddenNode, theatre.SensorNode.Input, theatre.ParameterNode.Parameter, theatre.SensorNode.addOutputNode, theatre.OutputNode, theatre.SensorNode, theatre.ParameterNode, theatre.CPPN.StemCellReadyToUse, theatre.CPPNQuery.StemCellReadyToUse)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set(/Users/Mateusz/Programming/Eclipse/EPANNs/mastersAlgorithm/src/main/scala/theatre/CPPN.scala, /Users/Mateusz/Programming/Eclipse/EPANNs/mastersAlgorithm/src/main/scala/theatre/CPPNNodes.scala, /Users/Mateusz/Programming/Eclipse/EPANNs/mastersAlgorithm/src/main/scala/theatre/CPPNQuery.scala, /Users/Mateusz/Programming/Eclipse/EPANNs/mastersAlgorithm/src/main/scala/theatre/VectorTools.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(theatre.CPPNQuery, theatre.CPPN, theatre.CPPNQuery.Result, theatre.HiddenNode, theatre.SensorNode.Input, theatre.ParameterNode.Parameter, theatre.SensorNode.addOutputNode, theatre.OutputNode, theatre.SensorNode, theatre.ParameterNode, theatre.CPPN.StemCellReadyToUse, theatre.CPPNQuery.StemCellReadyToUse)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(/Users/Mateusz/Programming/Eclipse/EPANNs/mastersAlgorithm/src/main/scala/theatre/CPPN.scala, /Users/Mateusz/Programming/Eclipse/EPANNs/mastersAlgorithm/src/main/scala/theatre/CPPNNodes.scala, /Users/Mateusz/Programming/Eclipse/EPANNs/mastersAlgorithm/src/main/scala/theatre/CPPNQuery.scala, /Users/Mateusz/Programming/Eclipse/EPANNs/mastersAlgorithm/src/main/scala/theatre/VectorTools.scala)[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 4 Scala sources to /Users/Mateusz/Programming/Eclipse/EPANNs/mastersAlgorithm/target/scala-2.12/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.2.1:compile for Scala 2.12.6[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.2.1:compile for Scala 2.12.6[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 3851ed94 for Scala compiler version 2.12.6[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/Library/Java/JavaVirtualMachines/jdk1.8.0_77.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_77.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_77.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_77.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_77.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_77.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_77.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_77.jdk/Contents/Home/jre/classes:/Users/Mateusz/.sbt/boot/scala-2.12.6/lib/scala-library.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/Users/Mateusz/Programming/Eclipse/EPANNs/mastersAlgorithm/target/scala-2.12/classes:/Users/Mateusz/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.5.16.jar:/Users/Mateusz/.ivy2/cache/com.typesafe/config/bundles/config-1.3.3.jar:/Users/Mateusz/.ivy2/cache/org.scala-lang.modules/scala-java8-compat_2.12/bundles/scala-java8-compat_2.12-0.8.0.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 8.507136472 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from theatre.SensorNode.AddOutputNode...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(theatre.SensorNode.AddOutputNode)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(theatre.SensorNode.AddOutputNode)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of theatre.CPPNQuery: Set(UsedName(asInstanceOf,[Default]), UsedName(weight,[Default]), UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(AddOutputNode,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(theatre.SensorNode.AddOutputNode,ModifiedNames(changes = UsedName($init$,[Default]), UsedName($asInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(copy$default$1,[Default]), UsedName(curried,[Default]), UsedName(weight,[Default]), UsedName(copy,[Default]), UsedName(getClass,[Default]), UsedName(nodeActor,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(hashCode,[Default]), UsedName(productIterator,[Default]), UsedName(productPrefix,[Default]), UsedName(copy$default$2,[Default]), UsedName(unapply,[Default]), UsedName(canEqual,[Default]), UsedName(notifyAll,[Default]), UsedName(tupled,[Default]), UsedName(eq,[Default]), UsedName(synchronized,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(apply,[Default]), UsedName($isInstanceOf,[Default]), UsedName(AddOutputNode,[Default]), UsedName(productElement,[Default]), UsedName(notify,[Default]), UsedName(theatre;SensorNode;AddOutputNode;init;,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]))) invalidates 2 classes due to The theatre.SensorNode.AddOutputNode has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($init$,[Default]), UsedName($asInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(copy$default$1,[Default]), UsedName(curried,[Default]), UsedName(weight,[Default]), UsedName(copy,[Default]), UsedName(getClass,[Default]), UsedName(nodeActor,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(hashCode,[Default]), UsedName(productIterator,[Default]), UsedName(productPrefix,[Default]), UsedName(copy$default$2,[Default]), UsedName(unapply,[Default]), UsedName(canEqual,[Default]), UsedName(notifyAll,[Default]), UsedName(tupled,[Default]), UsedName(eq,[Default]), UsedName(synchronized,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(apply,[Default]), UsedName($isInstanceOf,[Default]), UsedName(AddOutputNode,[Default]), UsedName(productElement,[Default]), UsedName(notify,[Default]), UsedName(theatre;SensorNode;AddOutputNode;init;,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(theatre.SensorNode.AddOutputNode)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(theatre.CPPNQuery)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from theatre.SensorNode...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(theatre.SensorNode)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(theatre.SensorNode)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of theatre.CPPNQuery: Set(UsedName(AddOutputNode,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(theatre.SensorNode,ModifiedNames(changes = UsedName(addOutputNode,[Default]), UsedName(AddOutputNode,[Default]))) invalidates 2 classes due to The theatre.SensorNode has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(addOutputNode,[Default]), UsedName(AddOutputNode,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(theatre.SensorNode)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(theatre.CPPNQuery)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from theatre.SensorNode.addOutputNode...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(theatre.SensorNode.addOutputNode)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(theatre.SensorNode.addOutputNode)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(theatre.SensorNode.addOutputNode,ModifiedNames(changes = UsedName($init$,[Default]), UsedName(addOutputNode,[Default]), UsedName($asInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(copy$default$1,[Default]), UsedName(curried,[Default]), UsedName(weight,[Default]), UsedName(theatre;SensorNode;addOutputNode;init;,[Default]), UsedName(copy,[Default]), UsedName(getClass,[Default]), UsedName(nodeActor,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(hashCode,[Default]), UsedName(productIterator,[Default]), UsedName(productPrefix,[Default]), UsedName(copy$default$2,[Default]), UsedName(unapply,[Default]), UsedName(canEqual,[Default]), UsedName(notifyAll,[Default]), UsedName(tupled,[Default]), UsedName(eq,[Default]), UsedName(synchronized,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(apply,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productElement,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]))) invalidates 1 classes due to The theatre.SensorNode.addOutputNode has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($init$,[Default]), UsedName(addOutputNode,[Default]), UsedName($asInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(copy$default$1,[Default]), UsedName(curried,[Default]), UsedName(weight,[Default]), UsedName(theatre;SensorNode;addOutputNode;init;,[Default]), UsedName(copy,[Default]), UsedName(getClass,[Default]), UsedName(nodeActor,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(hashCode,[Default]), UsedName(productIterator,[Default]), UsedName(productPrefix,[Default]), UsedName(copy$default$2,[Default]), UsedName(unapply,[Default]), UsedName(canEqual,[Default]), UsedName(notifyAll,[Default]), UsedName(tupled,[Default]), UsedName(eq,[Default]), UsedName(synchronized,[Default]), UsedName(equals,[Default]), UsedName(isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(apply,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productElement,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(theatre.SensorNode.addOutputNode)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set(theatre.CPPNQuery)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(theatre.CPPNQuery)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding theatre.CPPN by theatre.CPPNQuery[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding theatre.Stem by theatre.CPPN[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding theatre.Brain by theatre.Stem[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding theatre.Checker by theatre.Brain[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding theatre.OutputNode by theatre.CPPNQuery[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding theatre.SensorNode by theatre.CPPNQuery[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set(theatre.SensorNode)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll newly invalidated classes after taking into account (previously) recompiled classes:Set()[0m
